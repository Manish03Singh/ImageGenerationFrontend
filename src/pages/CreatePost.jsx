import React, { useState } from 'react'
import {getRandomPrompt} from '../utils/index'
import { useNavigate } from 'react-router-dom'
import { FormField,Loader } from '../components'
import preview from '../assets/preview.png'
import BASE_URL from '../helperURL'


const CreatePost = () => {
    const navigate = useNavigate();
    const [form,setForm] = useState({
        name:'',
        prompt:'',
        photo:''
    });
    const [generating, setGenerating] = useState(false);
    const [loading,setloading] = useState(false)

    const generateImage = async () => {
        if(form.prompt){
            try{
                setGenerating(true)
                const response = await fetch(`${BASE_URL}/api/v1/create`, {
                    method:'POST',
                    headers:{
                        'Content-Type':'application/json'
                    },
                    body: JSON.stringify({prompt : form.prompt})
                })
                //`data:image/jpeg;base64,${data}`
                //console.log(response)
                const data = await response.json();
                //console.log(data)
                setForm({...form, photo : data.photo});
                //console.log(form)

            }catch(error){
                console.log(`error in generateImage, error => ${error}`)
            }finally{
                setGenerating(false)
            }
        } else {
            alert('Please enter a prompt or click on Surprise me button')
        }
    }

    const handleSubmit = async(e) => {
        e.preventDefault();
        if(form.photo && form.prompt){
            setloading(true);

            try{
                const response = await fetch(`${BASE_URL}/api/v1/post`, {
                    method:'POST',
                    headers:{
                        'Content-Type':'application/json'
                    },
                    body: JSON.stringify(form)
                })
                const data = await response.json();
                console.log(data)
                navigate('/')
            } catch(error){
                alert(`Error in handleSubmit erro =>${error}`)
            }
        }
    }

    const handlechange = (e) => {
        setForm({...form,[e.target.name]:e.target.value})
    }

    const handleSurpriseMe = () => {
        const randomPrompt = getRandomPrompt(form.prompt)
        setForm({...form,prompt:randomPrompt})
    }

    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-[#222328] text-[32px]'>
                    Create
                </h1>
                <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px]'>
                Create stunning images generated by AI</p>
            </div>

            <form className='mt-16 max-w-3xl' onSubmit={handleSubmit}>
                <div className='flex flex-col gap-5'>
                    <FormField 
                        labelName='Your Name'
                        type='text'
                        name='name'
                        placeholder='Miami'
                        value={form.name}
                        handleChange={handlechange}
                    />
                    <FormField 
                        labelName='Prompt'
                        type='text'
                        name='prompt'
                        placeholder='Rainy Day with rainbow and sun'
                        value={form.prompt}
                        handleChange={handlechange}
                        isSurpriseMe
                        handleSurpriseMe={handleSurpriseMe}
                    />
                <div className='relative bg-gray-50 border border-gray-300 text-gray-900
                    text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64
                    flex justify-center items-center'>
                    {form.photo ? (
                            <img 
                                src={form.photo}
                                alt={form.prompt}
                                className='w-full h-full object-contain'
                            />
                        ) : (
                            <img 
                                src={preview}
                                alt="preview"
                                className='w-9/12 h-9/12 objext-contain opacity-40'
                            />
                    )}

                    {generating && (
                        <div className='absolute inset-0 z-0 flex justify-center items-center
                                        bg-[rgba(0,0,0,0.5)] rounded-lg'>
                            <Loader />
                        </div>
                    )}
                    </div>

                    <div className='mt-5 flex gap-5'>
                        <button
                            type='button'
                            onClick={generateImage}
                            className='text-white bg-[#6469ff] font-medium rounded-md text-sm w-full
                                        sm:w-auto px-5 py-2.5 text-center'   
                            >
                            {generating ? ('Generating...') : ('Generate')}
                        </button>
                    </div>
                    <div className='mt-10'>
                        <p className='mt-2 text-[#666e75] text-[14px]'>
                            You have created a image you can share it with others
                        </p>
                        <button
                            type='submit'
                            className='mt-3 text-white bg-green-700  font-medium rounded-md text-sm w-full
                                        sm:w-auto px-5 py-2.5 text-center'
                            >
                            Share with community
                        </button>
                    </div>
                </div>
            </form>
        </section>
    )
}

export default CreatePost